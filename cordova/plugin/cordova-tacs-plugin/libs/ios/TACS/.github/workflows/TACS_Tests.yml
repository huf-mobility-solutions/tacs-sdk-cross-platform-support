# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
 test:

    runs-on: macos-latest
    strategy:
      matrix:
        destination: ['platform=iOS Simulator,OS=13.4,name=iPhone 8']
        xcode: ['/Applications/Xcode_11.4.app/Contents/Developer']
    env:
      working-directory: ./Example  
    steps:
    - uses: actions/checkout@v2
    - name: Bundle Install
      working-directory: ${{ env.working-directory }}
      run: |
        bundle install 
    - name: Build and test
      working-directory: ${{ env.working-directory }}
      run: |
        fastlane scan --destination "${destination}"
      env:
         destination: ${{ matrix.destination }}
         DEVELOPER_DIR: ${{ matrix.xcode }}
    - name: Generate swift lint report
      working-directory: ${{ env.working-directory }}
      run: |
        Pods/SwiftLint/swiftlint --reporter html --config ../.swiftlint.yml > ../lint_reports/swiftlint_report.html 
    - name: Upload Test Coverage Report to Artifact
      uses: actions/upload-artifact@v2
      with:
       name: Coverage
       path: test_reports/report.html    
    - name: Upload swift lint report to Artifact
      uses: actions/upload-artifact@v2
      with:
       name: SwiftLint
       path: lint_reports/swiftlint_report.html
 build: 
       
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: ['/Applications/Xcode_11.4.app/Contents/Developer']
    steps:
    - uses: actions/checkout@v2   
    - name: Clean Build
      working-directory: ./Example
      run: |
        xcodebuild -workspace "TACS.xcworkspace" -scheme "TACS" -configuration "Release" -destination generic/platform=iOS ONLY_ACTIVE_ARCH=NO ENABLE_BITCODE=YES OTHER_CFLAGS="-fembed-bitcode" BITCODE_GENERATION_MODE=bitcode clean build
    - name: Bundle Install
      run: |
        bundle install      
    - name: Update Docs
      run: |
        jazzy  
    - name: Upload Docs to Artifact
      uses: actions/upload-artifact@v2
      with:
       name: Docs
       path: Docs/      

         
